{"version":3,"file":"commands.js","mappings":"YAAA,IAAIA,EACAC,EAcAC,EARJ,SAASC,EAAUC,GACjBC,OAAOC,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,eAAgB,CAC5EC,KAAM,eACNC,QAASR,IACR,SAASS,GACZ,GACF,CAsDA,SAASC,EAAeF,GACtBZ,EAASe,KAAKC,MAAMJ,EAAQA,SAC5BK,UAAUjB,GAAQ,SAASa,GACzBX,EAAegB,QACfhB,EAAiB,KACjBD,EAASkB,YACTlB,EAAW,IACb,GACF,CAEA,SAASmB,EAAaR,GACpBV,EAAiB,KACjBD,EAASkB,YACTlB,EAAW,IACb,CA7EAI,OAAOgB,WAAa,WACpB,EA4DAhB,OAAOiB,QAAQC,UAAU,qBAhDzB,SAA2BC,GAKzB,IAHAxB,EAASyB,cAGKzB,EAAO0B,cAEnB,IACEC,QAAQ3B,EAAO0B,eAAe,SAASE,EAAMxB,GACvCwB,EACFC,iBAAiBD,GAAM,SAAUE,EAAS1B,GACpC0B,EACFzB,OAAOC,QAAQC,QAAQC,KAAKuB,KAAKC,qBAAqBF,EACpD,CAACG,aAAc5B,OAAO6B,aAAaC,OAAO,SAAStB,GACjDW,EAAML,WACV,KAEAhB,EAAUC,GACVoB,EAAML,YAEV,KAEAhB,EAAUC,GACVoB,EAAML,YAEV,GACF,CAAE,MAAOiB,GACPjC,EAAUiC,GACVZ,EAAML,WACR,KAEK,CAELlB,EAAWuB,EAGX,IAAMa,EAAM,IAAIC,IAAI,sBAAsBC,WAAWC,OAAOC,UAAUC,WAGtErC,OAAOC,QAAQqC,GAAGC,mBAAmBP,EAFf,CAAEQ,MAAO,GAAIC,OAAQ,GAAIC,iBAAiB,IAEP,SAASlC,IAChEX,EAAiBW,EAAOmC,OACTC,gBAAgB5C,OAAO6C,UAAUC,sBAAuBrC,GACvEZ,EAAe+C,gBAAgB5C,OAAO6C,UAAUE,oBAAqBhC,EACvE,GACF,CACF,G","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["let config;\r\nlet btnEvent;\r\n\r\n// The initialize function must be run each time a new page is loaded.\r\nOffice.initialize = function () {\r\n};\r\n\r\nfunction showError(error) {\r\n  Office.context.mailbox.item.notificationMessages.replaceAsync('github-error', {\r\n    type: 'errorMessage',\r\n    message: error\r\n  }, function(result){\r\n  });\r\n}\r\n\r\nlet settingsDialog;\r\n\r\nfunction insertDefaultGist(event) {\r\n\r\n  config = getConfig();\r\n\r\n  // Check if the add-in has been configured.\r\n  if (config && config.defaultGistId) {\r\n    // Get the default gist content and insert.\r\n    try {\r\n      getGist(config.defaultGistId, function(gist, error) {\r\n        if (gist) {\r\n          buildBodyContent(gist, function (content, error) {\r\n            if (content) {\r\n              Office.context.mailbox.item.body.setSelectedDataAsync(content,\r\n                {coercionType: Office.CoercionType.Html}, function(result) {\r\n                  event.completed();\r\n              });\r\n            } else {\r\n              showError(error);\r\n              event.completed();\r\n            }\r\n          });\r\n        } else {\r\n          showError(error);\r\n          event.completed();\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showError(err);\r\n      event.completed();\r\n    }\r\n\r\n  } else {\r\n    // Save the event object so we can finish up later.\r\n    btnEvent = event;\r\n    // Not configured yet, display settings dialog with\r\n    // warn=1 to display warning.\r\n    const url = new URI('dialog.html?warn=1').absoluteTo(window.location).toString();\r\n    const dialogOptions = { width: 20, height: 40, displayInIframe: true };\r\n\r\n    Office.context.ui.displayDialogAsync(url, dialogOptions, function(result) {\r\n      settingsDialog = result.value;\r\n      settingsDialog.addEventHandler(Office.EventType.DialogMessageReceived, receiveMessage);\r\n      settingsDialog.addEventHandler(Office.EventType.DialogEventReceived, dialogClosed);\r\n    });\r\n  }\r\n}\r\n\r\n// Register the function.\r\nOffice.actions.associate(\"insertDefaultGist\", insertDefaultGist);\r\n\r\nfunction receiveMessage(message) {\r\n  config = JSON.parse(message.message);\r\n  setConfig(config, function(result) {\r\n    settingsDialog.close();\r\n    settingsDialog = null;\r\n    btnEvent.completed();\r\n    btnEvent = null;\r\n  });\r\n}\r\n\r\nfunction dialogClosed(message) {\r\n  settingsDialog = null;\r\n  btnEvent.completed();\r\n  btnEvent = null;\r\n}"],"names":["config","btnEvent","settingsDialog","showError","error","Office","context","mailbox","item","notificationMessages","replaceAsync","type","message","result","receiveMessage","JSON","parse","setConfig","close","completed","dialogClosed","initialize","actions","associate","event","getConfig","defaultGistId","getGist","gist","buildBodyContent","content","body","setSelectedDataAsync","coercionType","CoercionType","Html","err","url","URI","absoluteTo","window","location","toString","ui","displayDialogAsync","width","height","displayInIframe","value","addEventHandler","EventType","DialogMessageReceived","DialogEventReceived"],"sourceRoot":""}